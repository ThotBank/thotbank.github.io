# This workflow makes sure the frictionless package and derivates are up-to-date with the latest raw data

name: validate

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}

      # Sets up Python, only needed if we use a version different from the default
#      - name: Set up Python ${{ matrix.python-version }}
#        uses: actions/setup-python@v2
#        with:
#          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip wheel
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Validate data and schema
        run: |
          frictionless validate data/thotbank.package.yaml

#      - name: Prepare ZIP release
#        run: |
#          zip -9 output/runestaves.tabular.zip output/datapackage/*
          
#      - name: Commit changes
#        uses: stefanzweifel/git-auto-commit-action@v4
#        with:
#          commit_message: Update CSVW dataset
